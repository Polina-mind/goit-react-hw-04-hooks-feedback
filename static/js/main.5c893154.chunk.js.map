{"version":3,"sources":["components/Statistics/Statistics.js","components/FeedbackOptions/FeedbackOptions.js","components/Section/Section.js","components/Notification/Notification.js","App.js","index.js"],"names":["Statistics","good","neutral","bad","total","positivePercentage","className","FeedbackOptions","options","map","name","func","type","onClick","Section","title","children","Notification","message","App","useState","setGood","setNeutral","setBad","totalStatisticCount","Math","round","event","preventDefault","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"ySA+BeA,EA3BI,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,QAASC,EAAqC,EAArCA,IAAKC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,mBAC/C,OACED,EAAQ,GACN,sBAAKE,UAAU,mBAAf,UACE,uBAAMA,UAAU,YAAhB,mBAAmCL,KACnC,uBAAMK,UAAU,YAAhB,sBAAsCJ,KACtC,uBAAMI,UAAU,YAAhB,kBAAkCH,KAElC,gCACE,uBAAMG,UAAU,kBAAhB,oBAA0CF,KAC1C,uBAAME,UAAU,YAAhB,gCACsBD,EADtB,cCQKE,G,MAlBS,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACzB,OACE,qBAAKF,UAAU,UAAf,SACGE,EAAQC,KAAI,gBAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,KAAT,OACX,wBAAmBC,KAAK,SAASN,UAAU,SAASO,QAASF,EAA7D,SACGD,GADUA,UCUNI,G,MAbC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACxB,OACE,qCACE,oBAAIV,UAAU,QAAd,SAAuBS,IACtBC,OCOQC,G,MAZM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OACE,qBAAKZ,UAAU,eAAf,SACE,4BAAIY,QCsDKC,EAvDH,WACV,MAAwBC,mBAAS,GAAjC,mBAAOnB,EAAP,KAAaoB,EAAb,KACA,EAA8BD,mBAAS,GAAvC,mBAAOlB,EAAP,KAAgBoB,EAAhB,KACA,EAAsBF,mBAAS,GAA/B,mBAAOjB,EAAP,KAAYoB,EAAZ,KAoBMC,EAAsBvB,EAAOC,EAAUC,EACvCE,EAAqBoB,KAAKC,MAAOzB,EAAOuB,EAAuB,KAErE,OACE,qCACE,cAAC,EAAD,CAAST,MAAM,wBAAf,SACE,cAAC,EAAD,CACEP,QAAS,CACP,CAAEE,KAAM,OAAQC,KA1BH,SAAAgB,GACrBA,EAAMC,iBAENP,EAAQpB,EAAO,KAwBP,CAAES,KAAM,UAAWC,KArBH,SAAAgB,GACxBA,EAAMC,iBAENN,EAAWpB,EAAU,KAmBb,CAAEQ,KAAM,MAAOC,KAhBH,SAAAgB,GACpBA,EAAMC,iBAENL,EAAOpB,EAAM,UAkBX,cAAC,EAAD,CAASY,MAAM,aAAf,SACE,cAAC,EAAD,CACEd,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOoB,EACPnB,mBAAoBA,MAIC,IAAxBmB,GACC,cAAC,EAAD,CAAcN,QAAQ,0B,MClD9BW,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.5c893154.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './Statistics.css';\r\n\r\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => {\r\n  return (\r\n    total > 0 && (\r\n      <div className=\"Statistics-block\">\r\n        <span className=\"Statistic\">Good: {good}</span>\r\n        <span className=\"Statistic\">Neutral: {neutral}</span>\r\n        <span className=\"Statistic\">Bad: {bad}</span>\r\n\r\n        <div>\r\n          <span className=\"Statistic-total\">Total: {total}</span>\r\n          <span className=\"Statistic\">\r\n            Positive Feedback: {positivePercentage}%\r\n          </span>\r\n        </div>\r\n      </div>\r\n    )\r\n  );\r\n};\r\n\r\nStatistics.propTypes = {\r\n  good: PropTypes.number.isRequired,\r\n  neutral: PropTypes.number.isRequired,\r\n  bad: PropTypes.number.isRequired,\r\n  total: PropTypes.number.isRequired,\r\n  positivePercentage: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default Statistics;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './FeedbackOptions.css';\r\n\r\nconst FeedbackOptions = ({ options }) => {\r\n  return (\r\n    <div className=\"Buttons\">\r\n      {options.map(({ name, func }) => (\r\n        <button key={name} type=\"button\" className=\"Button\" onClick={func}>\r\n          {name}\r\n        </button>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nFeedbackOptions.propTypes = {\r\n  options: PropTypes.arrayOf(\r\n    PropTypes.shape({ name: PropTypes.string, func: PropTypes.func }),\r\n  ).isRequired,\r\n};\r\n\r\nexport default FeedbackOptions;\r\n","// eslint-disable-next-line no-unused-vars\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './Section.css';\r\n\r\nconst Section = ({ title, children }) => {\r\n  return (\r\n    <>\r\n      <h1 className=\"Title\">{title}</h1>\r\n      {children}\r\n    </>\r\n  );\r\n};\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Section;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './Notification.css';\r\n\r\nconst Notification = ({ message }) => {\r\n  return (\r\n    <div className=\"Notification\">\r\n      <p>{message}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Notification;\r\n","import React, { useState } from 'react';\nimport Statistics from './components/Statistics';\nimport FeedbackOptions from './components/FeedbackOptions';\nimport Section from './components/Section';\nimport Notification from './components/Notification';\n\nconst App = () => {\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n\n  const onGoodFeedback = event => {\n    event.preventDefault();\n\n    setGood(good + 1);\n  };\n\n  const onNeutralFeedback = event => {\n    event.preventDefault();\n\n    setNeutral(neutral + 1);\n  };\n\n  const onBadFeedback = event => {\n    event.preventDefault();\n\n    setBad(bad + 1);\n  };\n\n  const totalStatisticCount = good + neutral + bad;\n  const positivePercentage = Math.round((good / totalStatisticCount) * 100);\n\n  return (\n    <>\n      <Section title=\"Please leave feedback\">\n        <FeedbackOptions\n          options={[\n            { name: 'good', func: onGoodFeedback },\n            { name: 'neutral', func: onNeutralFeedback },\n            { name: 'bad', func: onBadFeedback },\n          ]}\n        ></FeedbackOptions>\n      </Section>\n\n      <Section title=\"Statistics\">\n        <Statistics\n          good={good}\n          neutral={neutral}\n          bad={bad}\n          total={totalStatisticCount}\n          positivePercentage={positivePercentage}\n        ></Statistics>\n      </Section>\n\n      {totalStatisticCount === 0 && (\n        <Notification message=\"No feedback given\"></Notification>\n      )}\n    </>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'modern-normalize/modern-normalize.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}